package it.unipi.mircv;

import it.unipi.mircv.beans.*;
import it.unipi.mircv.scoring.Score;

public class App {

    // TODO: 06/04/2023 implement the query processor demo interface
    public static void main(String[] args) {
        //DocumentIndex documentIndex = new DocumentIndex();
        //documentIndex.loadDocumentIndex();
        //System.out.println(documentIndex.size());*/

        Lexicon lexicon = new Lexicon();
        lexicon.loadLexicon();
        System.out.println(lexicon.size());

        System.out.println(lexicon.get("artificial"));
        System.out.println(lexicon.get("dog"));
        System.out.println(lexicon.get("sport"));

        // TODO: 04/04/2023 parse the query
        //String query = "artificial dog sport";

        //This array should be replaced with a list of tokens generated by the parser that must use the same parsing
        // used to generate the inverted index
        String[] words = {"artificial", "dog", "sport"};

        // TODO: 04/04/2023 load the postings [done]

        //Load the posting list of the terms of the query
        PostingList[] postingLists = new PostingList[words.length];

        for (int i = 0; i < words.length; i++) {
            postingLists[i] = new PostingList();
            postingLists[i].openList(lexicon.get(words[i]));
        }

        // TODO: 04/04/2023 score the collection of words [partially done]

        System.out.println(Score.scoreCollection(postingLists));

    }

}